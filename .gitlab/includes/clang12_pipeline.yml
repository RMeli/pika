# Copyright (c) 2023 ETH Zurich
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file BOOST_LICENSE_1_0.rst or copy at http://www.boost.org/LICENSE_1_0.txt)

include:
  - local: '.gitlab/includes/common_pipeline.yml'
  - local: '.gitlab/includes/common_spack_pipeline.yml'

.variables_clang12_config:
  variables:
    ARCH: linux-ubuntu22.04-broadwell
    BUILD_TYPE: Debug
    COMPILER: clang@12.0.1
    CXXSTD: 17
    SPACK_SPEC: "pika@main arch=$ARCH %${COMPILER} malloc=system cxxstd=$CXXSTD ^boost@1.79.0 \
                 ^hwloc@2.2.0"
    CMAKE_FLAGS: "-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPIKA_WITH_CXX_STANDARD=$CXXSTD \
                  -DPIKA_WITH_MALLOC=system -DPIKA_WITH_SPINLOCK_DEADLOCK_DETECTION=ON \
                  -DPIKA_WITH_COROUTINE_COUNTERS=ON \
                  -DPIKA_WITH_THREAD_IDLE_RATES=ON \
                  -DPIKA_WITH_THREAD_CREATION_AND_CLEANUP_RATES=ON \
                  -DPIKA_WITH_THREAD_CUMULATIVE_COUNTS=ON -DPIKA_WITH_THREAD_QUEUE_WAITTIME=ON \
                  -DPIKA_WITH_THREAD_STEALING_COUNTS=ON"

clang12_spack_image:
  stage: spack_configs
  needs: [base_spack_image]
  extends:
    - .container-builder
    - .variables_clang12_config
  before_script:
    - export DOCKERFILE_SHA=`sha256sum $DOCKERFILE | head -c 16`
    - CONFIG_TAG=`echo $DOCKERFILE_SHA-$ARCH-$BASE_IMAGE-$COMPILER-$SPACK_SPEC | sha256sum - | head -c 16`
    - compiler=${COMPILER/@/-}
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/base/pika-$compiler:$CONFIG_TAG
    - echo -e "compiler=$compiler" >> compiler.env
    - echo -e "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> compiler.env
  variables:
    DOCKERFILE: .gitlab/docker/Dockerfile.spack_compiler
    DOCKER_BUILD_ARGS: '["BASE_IMAGE","ARCH","COMPILER","SPACK_SPEC"]'
  artifacts:
    reports:
      dotenv: compiler.env

clang12_debug_build:
  stage: build
  extends:
    - .container-builder
    - .variables_clang12_config
    - .build_variables_common
    - .cmake_variables_common
  needs:
    - clang12_spack_image
  before_script:
    - export DOCKERFILE_SHA=`sha256sum $DOCKERFILE | head -c 16`
    - build_type=`echo $BUILD_TYPE | tr '[:upper:]' '[:lower:]'`
    - configuration=$DOCKERFILE_SHA-$BASE_IMAGE-$BUILD_DIR-$CMAKE_COMMON_FLAGS-$CMAKE_FLAGS-$CI_COMMIT_SHORT_SHA-$SOURCE_DIR
    - configuration=${configuration//-D/}
    - CONFIG_TAG=`echo $configuration | sha256sum - | head -c 16`
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/pika-$compiler-$build_type-build:$CONFIG_TAG
    - echo -e "PERSIST_IMAGE_NAME=$PERSIST_IMAGE_NAME" >> build.env
  artifacts:
    reports:
      dotenv: build.env

clang12_debug_test:
  extends:
    - .variables_clang12_config
    - .test_common_mc
    - .cmake_variables_common
  needs:
    - clang12_debug_build
  script:
    - spack arch
    - export CTEST_XML=$PWD/ctest.xml
    - trap "${SOURCE_DIR}/.gitlab/scripts/collect_ctest_metrics.sh ${CTEST_XML}" EXIT
    - spack build-env $spack_spec -- bash -c "ctest --output-junit ${CTEST_XML} --label-exclude COMPILE_ONLY --test-dir ${BUILD_DIR} -j$(($(nproc)/2)) --timeout 120 --output-on-failure --no-compress-output --no-tests=error"
  image: $PERSIST_IMAGE_NAME
