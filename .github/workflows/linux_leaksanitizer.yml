# Copyright (c) 2023 ETH Zurich
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: Linux CI (lsan)

on:
  merge_group:
  pull_request:
  push:
    branches:
      # Development and release branches
      - main
      - release**
      # Bors branches
      - trying
      - staging

jobs:
  build:
    name: github/linux/sanitizers/leak
    runs-on: ubuntu-latest
    container: pikaorg/pika-ci-base:19

    steps:
      - uses: actions/checkout@v4
      - name: Update apt repositories for ccache
        run: apt update
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-linux-sanitizers-leak
      - name: Configure
        shell: bash
        run: |
            cmake \
                . \
                -Bbuild \
                -GNinja \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                -DCMAKE_BUILD_TYPE=Debug \
                -DPIKA_WITH_UNITY_BUILD=ON \
                -DPIKA_WITH_MALLOC=system \
                -DPIKA_WITH_EXAMPLES=ON \
                -DPIKA_WITH_TESTS=ON \
                -DPIKA_WITH_TESTS_EXAMPLES=ON \
                -DPIKA_WITH_TESTS_HEADERS=OFF \
                -DPIKA_WITH_TESTS_MAX_THREADS=$(grep ^"core id" /proc/cpuinfo | sort -u | wc -l) \
                -DPIKA_WITH_COMPILER_WARNINGS=ON \
                -DPIKA_WITH_COMPILER_WARNINGS_AS_ERRORS=ON \
                -DPIKA_WITH_SANITIZERS=On \
                -DCMAKE_CXX_FLAGS="-fsanitize=leak -fno-omit-frame-pointer" \
                -DPIKA_WITH_STACKOVERFLOW_DETECTION=On
      - name: Build examples
        shell: bash
        run: |
            cmake --build build --target all
            cmake --build build --target examples
      - name: Test examples
        shell: bash
        run: |
            cd build
            ctest \
              --timeout 120 \
              --output-on-failure \
              -R tests.examples
      - name: Build all tests
        if: ${{ github.event_name == 'merge_group' }}
        shell: bash
        run: |
            cmake --build build --target tests
      - name: Run all tests
        if: ${{ github.event_name == 'merge_group' }}
        shell: bash
        run: |
            cd build
            # The process_mask_flag test assumes that there are two hardware
            # threads per core, but the test environment only has one per core
            ctest \
              --timeout 120 \
              --output-on-failure \
              -E \
            "tests.examples|\
            tests.unit.modules.runtime.process_mask_flag"
